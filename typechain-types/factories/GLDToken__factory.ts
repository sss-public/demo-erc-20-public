/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { GLDToken, GLDTokenInterface } from "../GLDToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021ba380380620021ba8339818101604052810190620000379190620004f6565b6040518060400160405280600481526020017f476f6c64000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f474c440000000000000000000000000000000000000000000000000000000000815250620000bf6793c6b6d6ecf02d9460c01b6200018a60201b60201c565b620000db674a6f7748f209457960c01b6200018a60201b60201c565b8160039081620000ec919062000798565b506200010967c423b1f49412dfc360c01b6200018a60201b60201c565b80600490816200011a919062000798565b5050506200013967f69d3f148ad2315c60c01b6200018d60201b60201c565b62000155679f03c6380dc189f160c01b6200018d60201b60201c565b62000171678c4330242f2a74de60c01b6200018d60201b60201c565b6200018333826200019060201b60201c565b506200099a565b50565b50565b620001ac67c1b48756cd9c917160c01b6200018a60201b60201c565b620001c867f3cbdab82e17d54060c01b6200018a60201b60201c565b620001e4675c87b43ed8d1b3b360c01b6200018a60201b60201c565b620002006729b6cc378373dca360c01b6200018a60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000272576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026990620008e0565b60405180910390fd5b6200028e67df8395a60f7ffd3f60c01b6200018a60201b60201c565b620002aa675daf0340bb6faa4960c01b6200018a60201b60201c565b620002c667364d58b53113db6360c01b6200018a60201b60201c565b620002da600083836200047460201b60201c565b620002f667f909cd15bba8413160c01b6200018a60201b60201c565b80600260008282546200030a919062000931565b925050819055506200032d67725a44917a8cebf260c01b6200018a60201b60201c565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200037d919062000931565b92505081905550620003a067e0fed1ad3e8c8f7260c01b6200018a60201b60201c565b620003bc67fe8d32cd14135b4060c01b6200018a60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200041c91906200097d565b60405180910390a36200044067186b73ae3c5ef54960c01b6200018a60201b60201c565b6200045c67223aec54f653a81e60c01b6200018a60201b60201c565b62000470600083836200049560201b60201c565b5050565b6200049067d2d496283b2e6cdb60c01b6200018a60201b60201c565b505050565b620004b167ef6defadfa7d590660c01b6200018a60201b60201c565b505050565b600080fd5b6000819050919050565b620004d081620004bb565b8114620004dc57600080fd5b50565b600081519050620004f081620004c5565b92915050565b6000602082840312156200050f576200050e620004b6565b5b60006200051f84828501620004df565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005aa57607f821691505b602082108103620005c057620005bf62000562565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200062a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005eb565b620006368683620005eb565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000679620006736200066d84620004bb565b6200064e565b620004bb565b9050919050565b6000819050919050565b620006958362000658565b620006ad620006a48262000680565b848454620005f8565b825550505050565b600090565b620006c4620006b5565b620006d18184846200068a565b505050565b5b81811015620006f957620006ed600082620006ba565b600181019050620006d7565b5050565b601f82111562000748576200071281620005c6565b6200071d84620005db565b810160208510156200072d578190505b620007456200073c85620005db565b830182620006d6565b50505b505050565b600082821c905092915050565b60006200076d600019846008026200074d565b1980831691505092915050565b60006200078883836200075a565b9150826002028217905092915050565b620007a38262000528565b67ffffffffffffffff811115620007bf57620007be62000533565b5b620007cb825462000591565b620007d8828285620006fd565b600060209050601f831160018114620008105760008415620007fb578287015190505b6200080785826200077a565b86555062000877565b601f1984166200082086620005c6565b60005b828110156200084a5784890151825560018201915060208501945060208101905062000823565b868310156200086a578489015162000866601f8916826200075a565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620008c8601f836200087f565b9150620008d58262000890565b602082019050919050565b60006020820190508181036000830152620008fb81620008b9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200093e82620004bb565b91506200094b83620004bb565b925082820190508082111562000966576200096562000902565b5b92915050565b6200097781620004bb565b82525050565b60006020820190506200099460008301846200096c565b92915050565b61181080620009aa6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad919061117f565b60405180910390f35b6100d060048036038101906100cb919061123a565b6102ce565b6040516100dd9190611295565b60405180910390f35b6100ee61037e565b6040516100fb91906112bf565b60405180910390f35b61011e600480360381019061011991906112da565b6103c4565b60405161012b9190611295565b60405180910390f35b61013c6104a8565b6040516101499190611349565b60405180910390f35b61016c60048036038101906101679190611364565b6104ed565b60405161017991906112bf565b60405180910390f35b61018a610571565b604051610197919061117f565b60405180910390f35b6101ba60048036038101906101b5919061123a565b61063f565b6040516101c79190611295565b60405180910390f35b6101ea60048036038101906101e59190611391565b6106ef565b6040516101f791906112bf565b60405180910390f35b606061021667808c546ca4ef099460c01b6107b2565b61022a67523c84273ec9bb1360c01b6107b2565b61023e67f6c018c0143610f860c01b6107b2565b6003805461024b90611400565b80601f016020809104026020016040519081016040528092919081815260200182805461027790611400565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b60006102e467781882deefcb194160c01b6107b2565b6102f867f6f8c9210cbfed4260c01b6107b2565b61030c67f9e0676a4bd4f74b60c01b6107b2565b60006103166107b5565b905061032c675708da42e642e19060c01b6107b2565b6103406752440db8fc5af89760c01b6107b2565b61034b8185856107f9565b61035f6719bbb1c83e17242d60c01b6107b2565b61037367fd372c78f241febb60c01b6107b2565b600191505092915050565b600061039467ae5af37acc76044160c01b6107b2565b6103a8671e4172179295145560c01b6107b2565b6103bc6721d3726238788e4e60c01b6107b2565b600254905090565b60006103da67c4ba0b60c10a3c0660c01b6107b2565b6103ee67861b3d466b3bb89860c01b6107b2565b61040267ba99ed1a474d0fd160c01b6107b2565b600061040c6107b5565b905061042267965c020b481e19cf60c01b6107b2565b61043667d830adebe94672af60c01b6107b2565b610441858285610ab2565b610455679997957022e89ed760c01b6107b2565b610469674a6f34abdc2b6b7460c01b6107b2565b610474858585610c5b565b6104886774b0686fe36fa92460c01b6107b2565b61049c67de9cf4af2e580e7560c01b6107b2565b60019150509392505050565b60006104be6717ea16d35d83338c60c01b6107b2565b6104d267acc6982bd49c64ba60c01b6107b2565b6104e667769879df2fe9f87860c01b6107b2565b6012905090565b6000610503679fd6cb6221533aa260c01b6107b2565b61051767f2cc8c4fb16eafba60c01b6107b2565b61052b677b38abfc16bde29c60c01b6107b2565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061058767311910361afa38ea60c01b6107b2565b61059b67106b44926a1d79fb60c01b6107b2565b6105af67caff40e465279b8760c01b6107b2565b600480546105bc90611400565b80601f01602080910402602001604051908101604052809291908181526020018280546105e890611400565b80156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b5050505050905090565b600061065567f942aee982aab75f60c01b6107b2565b6106696776a78297d3e69e7b60c01b6107b2565b61067d6777b8d96be43825f360c01b6107b2565b60006106876107b5565b905061069d67359278779e86e79660c01b6107b2565b6106b16755d77e4d61e7040c60c01b6107b2565b6106bc818585610c5b565b6106d0674730ed7d1db49b6960c01b6107b2565b6106e467779b820572ce74c660c01b6107b2565b600191505092915050565b600061070567f8eb1bff0542228e60c01b6107b2565b61071967419d70db2aa3bd9e60c01b6107b2565b61072d6706ed52a40cf1e98d60c01b6107b2565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b60006107cb67db648bc14e15c77a60c01b6110ba565b6107df67a1d8b1db0566772a60c01b6110ba565b6107f367b9c569b00da1eef960c01b6110ba565b33905090565b61080d6733006aaac6ea8ed160c01b6107b2565b61082167d3386760d9e3703460c01b6107b2565b61083567835de9651e7ef48860c01b6107b2565b61084967ed1c1c1618c4b06260c01b6107b2565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af906114a3565b60405180910390fd5b6108cc679b8df857c571f0ec60c01b6107b2565b6108e067594f60eaba270f1960c01b6107b2565b6108f467a1421fe4b4b7d2d660c01b6107b2565b61090867121ffaf690e3dff660c01b6107b2565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096e90611535565b60405180910390fd5b61098b678b67e40428e9c43860c01b6107b2565b61099f6737324dfaba35d68360c01b6107b2565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a3467bdf41a9cb5e1e8b160c01b6107b2565b610a486747a43ff21aff8a5860c01b6107b2565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610aa591906112bf565b60405180910390a3505050565b610ac667f965337553e7091160c01b6107b2565b610ada67d36f6358a4a4ad6160c01b6107b2565b610aee67405fc5e5266030b060c01b6107b2565b6000610afa84846106ef565b9050610b1067954380524f9d0a8f60c01b6107b2565b610b24671066e1f2e62e998b60c01b6107b2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c4057610b5f67e157b34309cb4bac60c01b6107b2565b610b7367724cf17e4aac798160c01b6107b2565b610b87672c4eff7370aedee360c01b6107b2565b610b9b674f0ab82ca0d7c09c60c01b6107b2565b81811015610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd5906115a1565b60405180910390fd5b610bf2678de32523bfb94b9160c01b6107b2565b610c06671e381d96849c148c60c01b6107b2565b610c1a67e391c3d10b397bd660c01b6107b2565b610c2e67acd55ee48ac0006c60c01b6107b2565b610c3b84848484036107f9565b610c55565b610c5467035bfd135f2708e660c01b6107b2565b5b50505050565b610c6f67237070f8c9eb7ada60c01b6107b2565b610c83673fa60d5d4ce46d2960c01b6107b2565b610c97672604aac821acb38560c01b6107b2565b610cab67a20e79f8ac3cff3b60c01b6107b2565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1190611633565b60405180910390fd5b610d2e67a48be7b50a2a38cf60c01b6107b2565b610d42676a848658bfdcdbf360c01b6107b2565b610d5667b77c554e6f34f49660c01b6107b2565b610d6a67683fe9d8ac64e7d760c01b6107b2565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd0906116c5565b60405180910390fd5b610ded6763f286aeb1c75ff860c01b6107b2565b610e016745c170b13b7b890e60c01b6107b2565b610e1567c97458c6b37d80c260c01b6107b2565b610e208383836110bd565b610e3467249a8dfda2edee2460c01b6107b2565b610e4867eb573841b2afdc9760c01b6107b2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610e9f67a1744dd205a3f1e460c01b6107b2565b610eb367a56886cc711c666960c01b6107b2565b610ec767d1e382d8a0b5344560c01b6107b2565b81811015610f0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0190611757565b60405180910390fd5b610f1e674b7d3fa3ee4dd58f60c01b6107b2565b610f3267b353d49d62846a4260c01b6107b2565b610f4667098113c419b0734360c01b6107b2565b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f9f67e9ee6bf9cf08746f60c01b6107b2565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fed91906117a6565b92505081905550611008670d54d4af8351ef6460c01b6107b2565b61101c671a8de014f7169a3860c01b6107b2565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161107991906112bf565b60405180910390a361109567e19453d01a0cbeee60c01b6107b2565b6110a9671734c5d50e439f5660c01b6107b2565b6110b48484846110d6565b50505050565b50565b6110d167d2d496283b2e6cdb60c01b6107b2565b505050565b6110ea67ef6defadfa7d590660c01b6107b2565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561112957808201518184015260208101905061110e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611151826110ef565b61115b81856110fa565b935061116b81856020860161110b565b61117481611135565b840191505092915050565b600060208201905081810360008301526111998184611146565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111d1826111a6565b9050919050565b6111e1816111c6565b81146111ec57600080fd5b50565b6000813590506111fe816111d8565b92915050565b6000819050919050565b61121781611204565b811461122257600080fd5b50565b6000813590506112348161120e565b92915050565b60008060408385031215611251576112506111a1565b5b600061125f858286016111ef565b925050602061127085828601611225565b9150509250929050565b60008115159050919050565b61128f8161127a565b82525050565b60006020820190506112aa6000830184611286565b92915050565b6112b981611204565b82525050565b60006020820190506112d460008301846112b0565b92915050565b6000806000606084860312156112f3576112f26111a1565b5b6000611301868287016111ef565b9350506020611312868287016111ef565b925050604061132386828701611225565b9150509250925092565b600060ff82169050919050565b6113438161132d565b82525050565b600060208201905061135e600083018461133a565b92915050565b60006020828403121561137a576113796111a1565b5b6000611388848285016111ef565b91505092915050565b600080604083850312156113a8576113a76111a1565b5b60006113b6858286016111ef565b92505060206113c7858286016111ef565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061141857607f821691505b60208210810361142b5761142a6113d1565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061148d6024836110fa565b915061149882611431565b604082019050919050565b600060208201905081810360008301526114bc81611480565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061151f6022836110fa565b915061152a826114c3565b604082019050919050565b6000602082019050818103600083015261154e81611512565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061158b601d836110fa565b915061159682611555565b602082019050919050565b600060208201905081810360008301526115ba8161157e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061161d6025836110fa565b9150611628826115c1565b604082019050919050565b6000602082019050818103600083015261164c81611610565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006116af6023836110fa565b91506116ba82611653565b604082019050919050565b600060208201905081810360008301526116de816116a2565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006117416026836110fa565b915061174c826116e5565b604082019050919050565b6000602082019050818103600083015261177081611734565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117b182611204565b91506117bc83611204565b92508282019050808211156117d4576117d3611777565b5b9291505056fea2646970667358221220ab72a8b3ea35911e3ea75858f3f3542d1e1eaf3cf000e52a2be3f068088899fb64736f6c63430008100033";

type GLDTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GLDTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GLDToken__factory extends ContractFactory {
  constructor(...args: GLDTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GLDToken> {
    return super.deploy(initialSupply, overrides || {}) as Promise<GLDToken>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): GLDToken {
    return super.attach(address) as GLDToken;
  }
  override connect(signer: Signer): GLDToken__factory {
    return super.connect(signer) as GLDToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GLDTokenInterface {
    return new utils.Interface(_abi) as GLDTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GLDToken {
    return new Contract(address, _abi, signerOrProvider) as GLDToken;
  }
}
